/******************************************1***************************************/
#define add(b) ++b
void main() {
	int num = 5;
	printf("%d", add(num));
	printf("%d", num);
}

/**************************************2**************************************/
הוא ישים (2018+2) איפה שרשום
year_plus_two
ואז מה שיקרה
x = (2018+2)*5
x = 10100
/***************************************3**************************************/
הוא ישים 2+2 במקום איקס ו 2+4 במקום וואי ואז ישים חיבור ביניהם וישים את תוצאת החיבור בתוך איקס
int x = FOO(2+2,2+4) --> 2+2 + 2+4 --> 10
x = 10
לכן יודפס 10
/*************************************4***************************************/
הוא ישים 2.0/2 במקום איקס ו 2/4 במקום וואי ואז ישים כפל ביניהם
x = MULT(2.0/2 , 2/4) --> 2.0 / 2 * 2 / 4 -->1.0 * 2 / 4 --> 2.0 / 4 --> 0.5 
אם היינו רוצים שכל איבר יהיה כפול האיבר השני היינו צריכים לעשות סוגריים כי אחרת זה עושה כמו שהראנו
לכן יודפס:
0.5
/****************************************5*************************************/
int x = ADD_SIX(3) * 3 --> 3 + 6 * 3 --> 21
x = 21
כיוון שהכל לא בסוגריים נוצר המצב הזה

/*************************************6****************************************/
כיוון שאין סוגריים אז הכפל יהיה בין ה2 ל 3 
int x = MULT(5+2 , 3+2) --> 5 + 2 * 3 + 2 --> 13
x = 13
/*************************************7****************************************/
יודפס 19 כיוון שהגדרנו את המשתנה 
YEARS_OLD 19
אחר כך הוא שואל אם לא הוגדר כבר 
YEARS_OLD
אז תגדיר אותו ושיהיה שווה 17 
אבל כיוון שכבר כן הגדרנו אותו אז זה יקח את הערך 19 של ההגדרה הראשונה ובעצם ההגדרה היחידה שהתבצעה
------------------ב------------------
יודפס 17 כיוון שהוא שואל אם עדיין לא הוגדר
YEARS_OLD
ואכן לא הוגדר אז הוא מגדיר אותו ושם בו את הערך 17 ולכן כשנדפיס את ערכו אנחנו נקבל 17 כצפוי
/**************************************8***************************************/
#define MY_ASSERT(a) if(a == 0)\
 printf("assertion failed:%s, %s, line %d ",#a ,__FILE__,__LINE__)
/*************************************9*****************************************/















