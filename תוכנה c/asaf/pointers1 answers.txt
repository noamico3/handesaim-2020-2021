/**********************שאלה 1**********************/

void swap(double* number1, double* number2) {
	double temp = *number1;
	*number1 = *number2;
	*number2 = temp; 
	
}

/**********************שאלה 2**********************/

void swap(double* number1, double* number2) {
	*number1 = *number1 + *number2;
	*number2 = *number1 - *number2;
	*number1 = *number1 - *number2;	
}


/**********************שאלה 4**********************/

void main() {
	int i, j;
	int arr1[5] = { 0,2,6,4,6 }, arr2[5] = { 1,2,9,7,5 }, arr3[5] = { 1,2,8,4,5 }, arr4[5] = { 1,10,3,16,5 };
	int* A[4] = { arr1,arr2,arr3,arr4 };
	int* p;
	for (i = 0; i < 4; i++)//עובר על ארבעת המערכים
	{
		printf("arr%d -->", i + 1);
		p = A[i];//כל פעם נצביע על תחילת מערך אחר
		for (j = 0; j < 5; j++)//עובר על האיברים בכל מערך
		{
			if (*(p + j) % 2 == 0)//כל פעם נעלה בכתובת לאחד הבא אחריו במערך ואז נבדוק את ערכו
			{
				printf("%d,", *(p + j));
			}
		}
		printf("\n");
	}
}


/**********************שאלה 5**********************/

/*-------------------------סעיף א--------------------------*/
void function5(int arr[], int size, int jump, int number) {
	int i;
	int* p = arr;
	for (i = 0; i < size; i += jump)
	{
		*(p + i) = number;
	}
}
/*-------------------------סעיף ב--------------------------*/

void main() {
	int i, j;
	int arr[10][10];
	int* p = (int*)arr; // נגיד לו להסתכל על תחילת המטריצה ככתובת כי אנחנו יודעים שבזכרון הכל אחד אחרי השני
	for (i = 0; i < 10; i++)
	{
		function5(p + i, 100 - i, 10, i);//  נתחיל מהמקום הראשון שלו במערך הראשון ונקפוץ קפיצות של 10 ממנו אך חשוב לזכור להוריד כמה שקפצנו בהתחלה מהסוף על מנת שלא נלך לכתובות מזובלות שלאחר המטריצה
	}

	for (i = 0; i < 10; i++)
	{
		for (j = 0; j < 10; j++)
		{
			printf("%d", arr[i][j]);
		}
		printf("\n");
	}
}











